#!/usr/bin/env bash


################################################################################
### Head: Url
##

# * https://github.com/samwhelp/skel-project-plan/blob/gh-pages/demo/sh/standalone/bin/demo-ctrl
# * https://www.freedesktop.org/wiki/Specifications/XSettingsRegistry/

##
### Tail: Url
################################################################################


################################################################################
### Head: Init
##
set -e ## for Exit immediately if a command exits with a non-zero status.
THE_BASE_DIR_PATH="$(cd -- "$(dirname -- "$0")" ; pwd)"
THE_CMD_FILE_NAME=$(basename $0)
##
### Tail: Init
################################################################################


################################################################################
### Head: Util_Debug
##

util_debug_echo () {
	if is_debug; then
		echo "$@" 1>&2;
	fi
}

##
### Head: Util_Debug
################################################################################


################################################################################
### Head: Base
##

## THE_BASE_DIR_PATH="$(cd -- "$(dirname -- "$0")" ; pwd)"

find_dir_path () {
	if ! [ -d "$(dirname -- "$1")" ]; then
		dirname -- "$1"
		return 1
	fi
	echo "$(cd -- "$(dirname -- "$1")" ; pwd)"
}

## THIS_BASE_DIR_PATH="$(find_dir_path "$0")"

## $ export DEBUG_LEFTWMRC_THEME_CTRL=true
is_debug () {
	if [ "$DEBUG_LEFTWMRC_THEME_CTRL" = "true" ]; then
		return 0
	fi

	return 1
}

is_not_debug () {
	! is_debug
}

base_var_init () {

	#THE_PLAN_DIR_PATH=$(find_dir_path "$THE_BASE_DIR_PATH/../.")
	THE_PLAN_DIR_PATH=$(find_dir_path "$THE_BASE_DIR_PATH/.")

	THE_CMD_VERSION='0.1'

	THE_CMD_DIR_PATH="${THE_BASE_DIR_PATH}"

	if [ "none${THE_CMD_FILE_NAME}" = 'none' ]; then
		THE_CMD_FILE_NAME="leftwmrc-theme-ctrl"
	fi

	THE_CMD_FILE_PATH="${THE_CMD_DIR_PATH}/$THE_CMD_FILE_NAME"

	## https://github.com/samwhelp/play-ubuntu-20.04-plan/blob/master/project/leftwmrc-profile/leftwmrc-theme-ctrl/leftwmrc-theme-ctrl
	THE_SELF_UPDATE_URL='https://raw.githubusercontent.com/samwhelp/note-about-leftwm/gh-pages/_demo/project/leftwmrc-profile/leftwmrc-theme-ctrl/leftwmrc-theme-ctrl'


	THE_TMP_DIR_PATH="/tmp"


	THE_ASSET_DIR_NAME="asset"
	THE_ASSET_DIR_PATH="$THE_PLAN_DIR_PATH/$THE_ASSET_DIR_NAME"

	THE_VAR_DIR_NAME="var"
	THE_VAR_DIR_PATH="$THE_PLAN_DIR_PATH/$THE_VAR_DIR_NAME"

	THE_PROFILE_DIR_NAME=".${THE_CMD_FILE_NAME}-profile"
	THE_PROFILE_DIR_PATH="$HOME/$THE_PROFILE_DIR_NAME"

	THE_PROJECT_DIR_NAME="${THE_CMD_FILE_NAME}"
	THE_PROJECT_DIR_PATH="$HOME/.local/share/$THE_PROJECT_DIR_NAME"

	THE_CONFIG_DIR_NAME="${THE_CMD_FILE_NAME}"
	THE_CONFIG_DIR_PATH="$HOME/.config/$THE_CONFIG_DIR_NAME"

	THE_CACHE_DIR_NAME="${THE_CMD_FILE_NAME}"
	THE_CACHE_DIR_PATH="$HOME/.cache/$THE_CACHE_DIR_NAME"


	## leftwm

	THE_LEFTWMRC_DIR_NAME="leftwm"
	THE_LEFTWMRC_DIR_PATH="$HOME/.config/$THE_LEFTWMRC_DIR_NAME"

	THE_LEFTWMRC_THEMES_DIR_NAME="themes"
	THE_LEFTWMRC_THEMES_DIR_PATH="$THE_LEFTWMRC_DIR_PATH/$THE_LEFTWMRC_THEMES_DIR_NAME"


	THE_LEFTWMRC_THEME_CURRENT_DIR_NAME="current"
	THE_LEFTWMRC_THEME_CURRENT_DIR_PATH="$THE_LEFTWMRC_THEMES_DIR_PATH/$THE_LEFTWMRC_THEME_CURRENT_DIR_NAME"

}

base_var_dump () {

	is_not_debug && return 0

	util_debug_echo
	util_debug_echo "################################################################################"
	util_debug_echo "### Head: var_dump"
	util_debug_echo "##"
	util_debug_echo "#"


	util_debug_echo "THE_PLAN_DIR_PATH=$THE_PLAN_DIR_PATH"

	util_debug_echo "THE_CMD_FILE_NAME=$THE_CMD_FILE_NAME"
	util_debug_echo "THE_CMD_FILE_PATH=$THE_CMD_FILE_PATH"
	util_debug_echo "THE_CMD_DIR_PATH=$THE_CMD_DIR_PATH"

	util_debug_echo "THE_SELF_UPDATE_URL=$THE_SELF_UPDATE_URL"


	util_debug_echo "THE_TMP_DIR_PATH=$THE_TMP_DIR_PATH"


	util_debug_echo "THE_ASSET_DIR_NAME=$THE_ASSET_DIR_NAME"
	util_debug_echo "THE_ASSET_DIR_PATH=$THE_ASSET_DIR_PATH"

	util_debug_echo "THE_VAR_DIR_NAME=$THE_VAR_DIR_NAME"
	util_debug_echo "THE_VAR_DIR_PATH=$THE_VAR_DIR_PATH"




	util_debug_echo "THE_PROFILE_DIR_NAME=$THE_PROFILE_DIR_NAME"
	util_debug_echo "THE_PROFILE_DIR_PATH=$THE_PROFILE_DIR_PATH"

	util_debug_echo "THE_PROJECT_DIR_NAME=$THE_PROJECT_DIR_NAME"
	util_debug_echo "THE_PROJECT_DIR_PATH=$THE_PROJECT_DIR_PATH"

	util_debug_echo "THE_CONFIG_DIR_NAME=$THE_CONFIG_DIR_NAME"
	util_debug_echo "THE_CONFIG_DIR_PATH=$THE_CONFIG_DIR_PATH"

	util_debug_echo "THE_CACHE_DIR_NAME=$THE_CACHE_DIR_NAME"
	util_debug_echo "THE_CACHE_DIR_PATH=$THE_CACHE_DIR_PATH"




	util_debug_echo "THE_LEFTWMRC_DIR_NAME=$THE_LEFTWMRC_DIR_NAME"
	util_debug_echo "THE_LEFTWMRC_DIR_PATH=$THE_LEFTWMRC_DIR_PATH"

	util_debug_echo "THE_LEFTWMRC_THEMES_DIR_NAME=$THE_LEFTWMRC_THEMES_DIR_NAME"
	util_debug_echo "THE_LEFTWMRC_THEMES_DIR_PATH=$THE_LEFTWMRC_THEMES_DIR_PATH"

	util_debug_echo "THE_LEFTWMRC_THEME_CURRENT_DIR_NAME=$THE_LEFTWMRC_THEME_CURRENT_DIR_NAME"
	util_debug_echo "THE_LEFTWMRC_THEME_CURRENT_DIR_PATH=$THE_LEFTWMRC_THEME_CURRENT_DIR_PATH"




	util_debug_echo "#"
	util_debug_echo "##"
	util_debug_echo "### Tail: var_dump"
	util_debug_echo "################################################################################"
	util_debug_echo
}


base_var_init

base_var_dump

##
### Tail: Base
################################################################################


################################################################################
### Head: Util_Command
##

is_function_exist () {
	if type -p "$1" > /dev/null; then
		return 0
	else
		return 1
	fi
}

is_command_exist () {
	if command -v "$1" > /dev/null; then
		return 0
	else
		return 1
	fi
}

##
### Tail: Util_Command
################################################################################


################################################################################
### Head: Util_SubCmd
##

sub_cmd_find_function_name () {
	echo "sub_run_$1"
}

##
### Tail: Util_SubCmd
################################################################################


################################################################################
### Head: Util_Self_Update
##

util_make_bin_dir () {
	mkdir -p "$HOME/bin"
}

util_make_tmp_dir () {
	THE_TMP_DIR_PATH="/tmp/tmp.$$.$RANDOM"
	mkdir "$THE_TMP_DIR_PATH"
}

util_self_update_download_to_tmp_dir () {

	local tmp_file_path="${THE_TMP_DIR_PATH}/${THE_CMD_FILE_NAME}"

	wget -c "$THE_SELF_UPDATE_URL" -O "$tmp_file_path"

}

util_self_update_install_from_tmp_dir () {

	local tmp_file_path="${THE_TMP_DIR_PATH}/${THE_CMD_FILE_NAME}"

	echo "install -m 755 $tmp_file_path $THE_CMD_FILE_PATH"
	install -m 755 "$tmp_file_path" "$THE_CMD_FILE_PATH"

}

util_self_update_check_cmd_exists () {

	if ! [ -f "$THE_CMD_FILE_PATH" ]; then ## file not exists
		return 0
	fi


	echo "File is exists:" "$THE_CMD_FILE_PATH"
	echo

	echo "Try to backup:"
	echo

	local now=$(date +%Y%m%d_%s)
	local bak_dir_path="${THE_CMD_FILE_PATH}.bak"
	local bak_file_path="${bak_dir_path}/${THE_CMD_FILE_NAME}.bak.$now"

	mkdir -p $bak_dir_path

	mv -v "$THE_CMD_FILE_PATH" "${bak_file_path}"

	if [ "$?" != "0" ]; then
		echo
		echo 'Backup Failure!'
		exit 1
	fi

	echo

	return 0
}

util_self_update_print_version () {
	echo
	echo "Current Version:"

	"$THE_CMD_FILE_PATH" version
}

util_self_update () {

	util_make_bin_dir

	util_make_tmp_dir

	util_self_update_download_to_tmp_dir

	util_self_update_check_cmd_exists && util_self_update_install_from_tmp_dir


	util_self_update_print_version

}


main_version () {
	echo $THE_CMD_VERSION
}

util_self_actions () {
	grep '^sub_run' "${THE_CMD_FILE_PATH}" | cut -d ' ' -f 1 | awk -F 'sub_run_' '{print $2}' | sort -u
}

##
### Tail: Util_Self_Update
################################################################################


################################################################################
### Head: Sys
##

is_leftwmrc_theme_dir () {
	local dir_path="$1"
	local leftwmrc_theme_file_path="$dir_path/up" ## ~/.config/leftwm/themes/demo/up

	if [ ! -f "$leftwmrc_theme_file_path" ]; then ## check ~/.config/leftwm/themes/demo/up
		return 1
	fi

	return 0
}

is_not_leftwmrc_theme_dir () {
	local dir_path="$1"
	local leftwmrc_theme_file_path="$dir_path/up" ## ~/.config/leftwm/themes/demo/up

	if [ -f "$leftwmrc_theme_file_path" ]; then ## check ~/.config/leftwm/themes/demo/up
		return 1
	fi

	return 0
}

leftwmrc_theme_find_dir_path_by_name () {
	local name="$1"
	echo "$THE_LEFTWMRC_THEMES_DIR_PATH/$name"
}


leftwmrc_check_theme_dir_exists () {

	echo 'Todo: leftwmrc_check_theme_dir_exists'
}


##
### Tail: Sys
################################################################################


################################################################################
### Head: Model xephyr
##

## Original Script
## https://github.com/worron/awesome-config/blob/master/scripts/run-with-xephyr.sh

## Arch Wiki / Xephyr
## https://wiki.archlinux.org/index.php/Xephyr

mod_xephyr () {
	#echo "mod_xephyr"
	#echo "$@"

if ! is_command_exist 'Xephyr'; then

cat << EOF

## Need: Xephyr

	* https://archlinux.org/packages/extra/x86_64/xorg-server-xephyr/

	$ pamac install xorg-server-xephyr

EOF
	return 1
fi

mod_xephyr_run_leftwm "$1"

}


mod_xephyr_run_leftwm () {

	## screen_size
	local screen_size="1280x720"


	if [ "none$1" != "none" ]; then
		screen_size="$1"
	fi

	## run Xephyr
	echo "Xephyr :100 -ac -screen $screen_size &"
	#Xephyr :100 -ac -screen 1280x720 &
	Xephyr :100 -ac -screen "$screen_size" &
	XEPHYR_PID=$!
	sleep 0.5

	## run leftwm
	echo "DISPLAY=:100 leftwm"
	DISPLAY=:100 leftwm


	## make sure kill Xephyr
	kill ${XEPHYR_PID}

}



##
### Tail: Model xephyr
################################################################################


################################################################################
### Head: Model fzf
##

mod_fzf () {
	#echo "mod_fzf"
	#echo "$@"

	if ! is_command_exist 'fzf'; then

cat << EOF

## Need: fzf

	* https://github.com/junegunn/fzf

	$ pamac install fzf

EOF
	return 1

	fi



	local selected=$(mod_leftwmrc_theme_list | fzf)


	echo
	echo "## Selected: $selected"
	echo

	if [ "none$selected" = "none" ]; then
		return 1
	fi

	mod_leftwmrc_theme_set "$selected"


}

##
### Tail: Model fzf
################################################################################


################################################################################
### Head: Model mod_leftwmrc_theme_default
##

mod_leftwmrc_theme_default () {
	mod_leftwmrc_theme_set 'default'
}

##
### Tail: Model mod_leftwmrc_theme_default
################################################################################


################################################################################
### Head: Model mod_leftwmrc_theme_list
##

mod_leftwmrc_theme_list () {
	#echo "mod_leftwmrc_theme_list"
	#echo "$@"

	# leftwmrc-theme-ctrl list

	local name=''
	local dir_path=''

	cd "$THE_LEFTWMRC_THEMES_DIR_PATH"

	## for name in $(ls ./ -1); do
	for name in *; do

		dir_path="$THE_LEFTWMRC_THEMES_DIR_PATH/$name" ## ~/.config/leftwm/themes/demo

		if is_not_leftwmrc_theme_dir "$dir_path"; then ## check ~/.config/leftwm/themes/demo/theme.toml
			continue
		fi

		if [ "is_current" == "is_$name" ]; then ## check ~/.config/leftwm/themes/demo/theme.toml
			continue
		fi

		echo "$name"
	done

	cd "$OLDPWD"

}

##
### Tail: Model mod_leftwmrc_theme_list
################################################################################


################################################################################
### Head: Model mod_leftwmrc_theme_get
##

mod_leftwmrc_theme_get () {
	#echo "mod_leftwmrc_theme_get"
	#echo "$@"

	# leftwmrc-theme-ctrl get
	# file ~/.config/leftwm/themes/current

	local dir_path=$(LANG=C file $THE_LEFTWMRC_THEME_CURRENT_DIR_PATH | awk -F ' symbolic link to ' '{print $2}')
	local name=$(basename "$dir_path")

	echo $name

}

##
### Tail: Model mod_leftwmrc_theme_get
################################################################################


################################################################################
### Head: Model mod_leftwmrc_theme_set
##

mod_leftwmrc_theme_set () {
	#echo "mod_leftwmrc_theme_set"
	#echo "$@"


	## $ leftwmrc-theme-ctrl set demo

	local name="$1"
	local source_dir_path="$THE_LEFTWMRC_THEMES_DIR_PATH/$name"
	local target_dir_path="$THE_LEFTWMRC_THEME_CURRENT_DIR_PATH"

	#echo "target_dir_path=$target_dir_path"
	#echo "source_dir_path=$source_dir_path"

	if is_not_leftwmrc_theme_dir "$source_dir_path"; then ## check ~/.config/leftwm/themes/demo
		echo "Not valid leftwmrc_theme dir: $source_dir_path"
		echo
		echo 'Please run:'
		echo '	$ leftwmrc-theme-ctrl list'
		echo 'to find valid leftwmrc_theme dir.'
		return 1
	fi

	leftwmrc_check_theme_dir_exists


	if [ -h "$target_dir_path" ]; then ## ~/.config/leftwm/themes/demo is symbolic link
		echo
		echo rm -f "$target_dir_path"
		rm -f "$target_dir_path"
	else
		echo
		echo rm -rf "$target_dir_path"
		rm -rf "$target_dir_path"
	fi




	echo
	echo ln -sf "$source_dir_path" "$target_dir_path"
	ln -sf "$source_dir_path" "$target_dir_path"


	echo
	file "$target_dir_path"

}


##
### Tail: Model mod_leftwmrc_theme_set
################################################################################


################################################################################
### Head: Model leftwmrc_theme_install
##

mod_leftwmrc_theme_install () {

	## $ leftwmrc-theme-ctrl install dracula_rounded https://github.com/AethanFoot/leftwm-theme-dracula-rounded.git

	local name="$1"
	local repo_url="$2"

	echo "mkdir -p $THE_LEFTWMRC_THEMES_DIR_PATH"
	mkdir -p "$THE_LEFTWMRC_THEMES_DIR_PATH"

	echo "cd $THE_LEFTWMRC_THEMES_DIR_PATH"
	cd "$THE_LEFTWMRC_THEMES_DIR_PATH" ## cd ~/.confg/leftwm/themes


	echo "git clone --recursive $repo_url $name"
	git clone --recursive "$repo_url" "$name" ## git clone https://github.com/AethanFoot/leftwm-theme-dracula-rounded.git dracula_rounded

	cd "$OLDPWD"

}

##
### Tail: Model leftwmrc_theme_install
################################################################################


################################################################################
### Head: Model mod_leftwmrc_theme_remove
##

mod_leftwmrc_theme_remove () {

	## $ leftwmrc-theme-ctrl remove dracula_rounded

	local name="$1"
	#echo $name

	echo "cd $THE_LEFTWMRC_THEMES_DIR_PATH"
	cd "$THE_LEFTWMRC_THEMES_DIR_PATH" ## cd ~/.config/leftwm/themes

	local dir_path="./$name"

	if [ ! -d "$dir_path" ]; then ## check ~/.config/leftwm/themes/demo
		echo "Dir not exists: $name"
		return 1
	fi

	##mod_leftwmrc_theme_default

	echo "rm -rf $dir_path"
	rm -rf "$dir_path"

	cd "$OLDPWD"

}

##
### Tail: Model mod_leftwmrc_theme_remove
################################################################################


################################################################################
### Head: SubCmd
##

sub_run_help () {
	main_usage "$@"
}

sub_run_version () {
	main_version "$@"
}

sub_run_self_update () {
	util_self_update "$@"
}

sub_run_self_actions () {
	util_self_actions "$@"
}



sub_run_xephyr () {
	#echo "sub_run_xephyr"
	mod_xephyr "$@"
}


sub_run_fzf () {
	#echo "sub_run_fzf"
	mod_fzf "$@"
}


sub_run_default () {
	#echo "sub_run_default"
	mod_leftwmrc_theme_default
}


sub_run_list () {
	#echo "sub_run_list"
	mod_leftwmrc_theme_list "$@"
}


sub_run_get () {
	#echo "sub_run_get"
	mod_leftwmrc_theme_get "$@"
}


sub_run_set () {
	#echo "sub_run_set"
	mod_leftwmrc_theme_set "$@"
}


sub_run_install () {
	#echo "sub_run_install"
	mod_leftwmrc_theme_install "$@"
}


sub_run_remove () {
	#echo "sub_run_remove"
	mod_leftwmrc_theme_remove "$@"
}

##
### Tail: SubCmd
################################################################################


################################################################################
### Head: Main
##

main_usage () {
	##local cmd_name="$0"
	local cmd_name="$THE_CMD_FILE_NAME"

cat << EOF
Usage:
	$ $cmd_name [action]

Example:

	## help

		$ $cmd_name
		$ $cmd_name help

	## version

		$ $cmd_name version

	## self_update

		$ $cmd_name self_update

	## self_actions

		$ $cmd_name self_actions

	## xephyr

		$ $cmd_name xephyr

		$ $cmd_name xephyr 1280x720

	## fzf

		$ $cmd_name fzf

	## profile

		$ $cmd_name default

		$ $cmd_name list

		$ $cmd_name get

		$ $cmd_name set demo

		$ $cmd_name install dracula_rounded https://github.com/AethanFoot/leftwm-theme-dracula-rounded.git

		$ $cmd_name remove dracula_rounded


Debug:
	$ export DEBUG_LEFTWMRC_THEME_CTRL=true

EOF

}

main_check_args_size () {
	if [ $1 -le 0 ]; then
		shift
		main_run_default_sub_cmd "$@"
		exit 1
	fi
}

main_run_default_sub_cmd () {
	main_usage "$@"
}

main_run_sub_cmd () {

	local sub_cmd="$1"

	shift

	local function_name=$(sub_cmd_find_function_name "$sub_cmd")

	## if ! command -v $function_name > /dev/null; then
	if ! type -p $function_name > /dev/null; then
		util_debug_echo "[Debug] sub_cmd_function_not_exist: sub_cmd=$sub_cmd; function_name=$function_name"

		echo
		main_run_default_sub_cmd "$@"
		return 1
	fi

	"$function_name" "$@" ## run sub cmd function


}

## Start
main_check_args_size $# "$@"

main_run_sub_cmd "$@"

##
### Tail: Main
################################################################################
